---
# Source: ordercommandms/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "ordercommandms-deployment"
  labels:
    chart: 'ordercommandms-1.0.0'
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: "ordercommandms-selector"
  template:
    metadata:
      labels:
        app: "ordercommandms-selector"
        version: "current"
    spec:
      serviceAccountName: kcontainer-runtime
      containers:
      - name: "ordercommandms"
        image: "ibmcase/kcontainer-order-command-ms:latest"
        imagePullPolicy: Always

        readinessProbe:
          httpGet:
            path: /health
            port: 9080
          initialDelaySeconds: 20

        resources:
          requests:
            cpu: "200m"
            memory: "300Mi"
        env:
          - name: PORT
            value: "9080"
          - name: APPLICATION_NAME
            value: "release-name"
          - name: KAFKA_BROKERS
            valueFrom:
              configMapKeyRef:
                name: "kafka-brokers"
                key: brokers
          - name: ORDER_TOPIC
            valueFrom:
              configMapKeyRef:
                name: "kafka-topics"
                key: ordersTopic
          - name: ORDERCOMMAND_TOPIC
            valueFrom:
              configMapKeyRef:
                name: "kafka-topics"
                key: orderCommandsTopic
          - name: ERROR_TOPIC
            valueFrom:
              configMapKeyRef:
                name: "kafka-topics"
                key: errorsTopic
          - name: KAFKA_APIKEY
            valueFrom:
              secretKeyRef:
                name: "eventstreams-apikey"
                key: binding
